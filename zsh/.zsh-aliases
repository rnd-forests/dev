alias pbpaste='xsel --clipboard --output'
alias pbcopy='xsel --clipboard --input && copy_message'
copy_message() {
  notify-send 'Contents copied to the clipboard.' --urgency='normal'
}

alias ..='cd ..'
alias ...='cd ../..'
alias c='clear'

alias whatip='curl http://ipecho.net/plain; echo'

alias chx='chmod 755'
alias chr='chmod 644'

alias rmf='rm -rf'

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias install='sudo apt install'
alias sha1='openssl sha1'
alias ports='netstat -tulanp'

alias ipt='sudo /sbin/iptables'
alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
alias firewall=iptlist

alias reboot='sudo /sbin/reboot'
alias poweroff='sudo /sbin/poweroff'
alias halt='sudo /sbin/halt'
alias shutdown='sudo /sbin/shutdown'

alias chrome='/opt/google/chrome/chrome'
alias src='source ~/.zshrc'

alias pls='ls -l --color -h --group-directories-first -s -A'

# Install Python pygments first --> sudo apt install python-pygments
alias pcat='pygmentize -f terminal256 -O style=native -g'

# Starting a simple PHP server.
serve() {
  php -S localhost:"$1"
}

# Changing to a specified directory and listing all files inside it.
cls() {
  cd "$1"; ls;
}

### Git aliases
alias gop='git open'
alias gc='git commit'
alias gs='git status'
alias gb='git branch'
alias gco='git checkout'
alias gaa='git add --all'
alias gfa='git fetch --all'
alias grss='git reset --soft HEAD~'
alias gundo='git reset HEAD~ && git clean -df'
alias nah='git reset --hard && git clean -df'
alias gl="git log --graph --pretty=format:'%Cred%h%Creset - %s%n%C(yellow)%d%Creset %Cgreen(%cr) %Cblue(%an)%Creset%n'"

# Parsing current git branch
git_branch() {
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    return 0
  fi
  branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
  echo "$branch"
}

# Storing changes into a temporary commit and making an interactive rebase.
grip() {
  git add --all; git commit -m "a"; git rebase -i HEAD~"$1"; git push origin $(git_branch) -f; git open;
}

# Adding all current files to staging area, specifying the commit message and pushing these changes up to the current branch.
gap() {
  git add --all; git commit -S -m "$1"; git push origin $(git_branch); git open;
}

# Appending changes to the latest commit without changing the commit message and pushing these changes up to the current branch.
garp() {
  git add --all; git commit --amend --no-edit; git push origin $(git_branch) -f; git open;
}

# Updating the commit message and pushing the change up to the current branch.
gca() {
  git add --all; git commit --amend; git push origin $(git_branch) -f; git open;
}

# Create a 'working in progress' commit
wip() {
  git add --all; git commit -m 'wip';
}


### SSH
# Copying SSH key.
alias sshkey="cat ~/.ssh/id_rsa.pub | pbcopy && ssh_message"
ssh_message() {
  notify-send 'Copied SSH key to the clipboard.' --urgency='normal'
}


### Docker
alias docker-stop-all="docker kill $(docker ps -a -q)"
alias docker-remove-all="docker rm $(docker ps -a -q)"


### Extracting different types of archive.
extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1     ;;
      *.tar.gz)    tar xzf $1     ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       unrar e $1     ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xf $1      ;;
      *.tbz2)      tar xjf $1     ;;
      *.tgz)       tar xzf $1     ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)     echo "'$1' cannot be extracted via extract()" ;;
      esac
  else
    echo "'$1' is not a valid file"
  fi
}
