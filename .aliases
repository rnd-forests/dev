alias pbcopy='xsel --clipboard --input && copied_message'
alias pbpaste='xsel --clipboard --output'

alias ..='cd ..'
alias ...='cd ../..'
alias c='clear'

alias ps?='ps aux | grep'
alias whatip='curl http://ipecho.net/plain; echo'

alias chx='chmod 755'
alias chr='chmod 644'

alias rmf='rm -rf'

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias install='sudo apt-get install'
alias sha1='openssl sha1'
alias ports='netstat -tulanp'

alias ipt='sudo /sbin/iptables'
alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
alias firewall=iptlist

alias reboot='sudo /sbin/reboot'
alias poweroff='sudo /sbin/poweroff'
alias halt='sudo /sbin/halt'
alias shutdown='sudo /sbin/shutdown'

alias chrome='/opt/google/chrome/chrome'
alias src='source ~/.bashrc'

cls() {
    cd "$1"; ls;
}

ssh_message() {
    notify-send 'Copied SSH key to clipboard.' --urgency='normal' -i /home/vinhnguyen/Icons/key.png
}

copied_message() {
    notify-send "Copied to clipboard!" -i /home/vinhnguyen/Icons/copy.png
}

pkgs() {
    apt-cache pkgnames | grep -i "$1" | sort
}

# GIT stuffs
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gundo='git reset HEAD~ && git clean -df'
alias gc='git commit'
alias gs='git status'
alias gb='git branch'
alias gco='git checkout'
alias gr='git rebase'
alias gri='git rebase -i'
alias grs='git reset'
alias gd='git diff'
alias ga='git add'
alias gaa='git add --all'

alias sshkey="cat ~/.ssh/id_rsa.pub | pbcopy && ssh_message"

alias homestead='function __homestead() { (cd ~/Homestead && vagrant $*); unset -f __homestead; }; __homestead'
alias hson='homestead up && homestead ssh'
alias hsoff='homestead halt && exit'
alias artisan='php artisan'
alias migrate='php artisan migrate'
alias tinker='php artisan tinker'

extract() {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}
